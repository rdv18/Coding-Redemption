/*

https://leetcode.com/problems/keys-and-rooms/description/

*/

class Solution {

    boolean visit[];
    int count = 0;

    void dfs(List<List<Integer>> rooms, int u) {
        for (int i = 0; i < rooms.get(u).size(); i++) {
            if (!visit[rooms.get(u).get(i)]) {
                visit[rooms.get(u).get(i)] = true;
                count++;
                dfs(rooms, rooms.get(u).get(i));
            }
        }
    }

    public boolean canVisitAllRooms(List<List<Integer>> rooms) {

        visit = new boolean[rooms.size()];
        visit[0] = true;

        dfs(rooms, 0);

        if (count == rooms.size() - 1) {
            return true;
        }
        return false;
    }
}
