/*

https://leetcode.com/problems/keys-and-rooms/description/

*/

class Solution {

    boolean visitedRooms[];
    int count = 0;

    void dfs(int u, List<List<Integer>> rooms) {
        visitedRooms[u] = true;
        for (int i = 0; i < rooms.get(u).size(); i++) {
            if (!visitedRooms[rooms.get(u).get(i)]) {
                visitedRooms[rooms.get(u).get(i)] = true;
                count++;
                dfs(rooms.get(u).get(i), rooms);
            }
        }
    }
    public boolean canVisitAllRooms(List<List<Integer>> rooms) {
        visitedRooms = new boolean[rooms.size()];

        dfs(0, rooms);
        if (count + 1 == rooms.size()) {
            return true;
        }

        return false;
    }
}
