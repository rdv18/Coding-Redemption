/*

https://leetcode.com/problems/delete-node-in-a-bst/description/

*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public int findSmallestNode(TreeNode root) {
        while (root != null && root.left != null) {
            root = root.left;
        }
        return root.val;
    }

    public TreeNode delete(TreeNode root, int key) {
        if (root == null) {
            return null;
        }
        if (root.val < key) {
            root.right = delete(root.right, key);
        } else if (root.val > key) {
            root.left = delete(root.left, key);
        } else {
            if (root.left == null) {
                return root.right;
            } else if (root.right == null) {
                return root.left;
            } else {
                root.val = findSmallestNode(root.right);
                root.right = delete(root.right, root.val);
            }
        }
        return root;
    }

    public TreeNode deleteNode(TreeNode root, int key) {

        root = delete(root, key);

        return root;

    }
}
