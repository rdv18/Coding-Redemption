/*

https://leetcode.com/problems/kth-largest-element-in-an-array/description/

*/

class Solution {
    public int findKthLargest(int[] nums, int k) {

        int counts[] = new int[20001];

        for (int i = 0; i < nums.length; i++) {
            counts[nums[i] + 10000]++;
        }

        for (int i = counts.length - 1; i >= 0; i--) {
            if (counts[i] > 0) {
                k = k - counts[i];
            }
            if (k <= 0) {
                return i - 10000;
            }
        }
        return 0;
    }
}

----------------------------------
class Solution {
    public int findKthLargest(int[] nums, int k) {

        PriorityQueue<Integer> queue = new PriorityQueue<>(Collections.reverseOrder());

        for (int i = 0; i < nums.length; i++) {
            queue.add(nums[i]);
        }
        int j = 0;
        int res = 0;

        while (j != k) {
            j++;
            res = queue.poll();

        }

        return res;
    }
}
