/*
https://leetcode.com/problems/product-of-array-except-self/description/

*/

class Solution {
    public int[] productExceptSelf(int[] nums) {

        int product = 1;

        int preffix[] = new int[nums.length];
        int suffix[] = new int[nums.length];
        int res[] = new int[nums.length];

        for (int i = nums.length - 1; i >= 0; i--) {
            product *= nums[i];
            suffix[i] = product;
        }
        product = 1;
        for (int i = 0; i < nums.length; i++) {
            product *= nums[i];
            preffix[i] = product;

            if (i == 0) {
                res[i] = suffix[i + 1];
            } else if (i == nums.length - 1) {
                res[i] = preffix[i - 1];
            } else {
                res[i] = preffix[i - 1] * suffix[i + 1];
            }
        }
        return res;
    }
}


------------------------

with O(1) space:

class Solution {
    public int[] productExceptSelf(int[] nums) {

        int product = 1;
        int res[] = new int[nums.length];

        for (int i = nums.length - 1; i >= 0; i--) {
            product *= nums[i];
            res[i] = product;
        }

        product = 1;

        for (int i = 0; i < nums.length - 1; i++) {

            res[i] = product * res[i + 1];
            product *= nums[i];
        }
        res[nums.length - 1] = product;
        return res;
    }
}

*/
